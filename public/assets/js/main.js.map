{"version":3,"sources":["cookie.js","spinner.js","modal.js","post.js","poll.js","quote.js","avatar.js","other.js","moderation.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnrarfile":"main.js","sourcesContent":["(function ($, window) {\n    window.MyBB = window.MyBB || {};\n\n    window.MyBB.Cookie = {\n        cookiePrefix: '',\n        cookiePath: '/',\n        cookieDomain: '',\n\n        init: function () {\n            MyBB.Settings = MyBB.Settings || {};\n            if (typeof MyBB.Settings.cookiePrefix != 'undefined') {\n                this.cookiePrefix = MyBB.Settings.cookiePrefix;\n            }\n            if (typeof MyBB.Settings.cookiePath != 'undefined') {\n                this.cookiePath = MyBB.Settings.cookiePath;\n            }\n            if (typeof MyBB.Settings.cookieDomain != 'undefined') {\n                this.cookieDomain = MyBB.Settings.cookieDomain;\n            }\n        },\n\n        get: function (name) {\n            this.init();\n\n            name = this.cookiePrefix + name;\n            return $.cookie(name);\n        },\n\n        set: function (name, value, expires) {\n            this.init();\n\n            name = this.cookiePrefix + name;\n            if (!expires) {\n                expires = 157680000; // 5*365*24*60*60 => 5 years\n            }\n\n            expire = new Date();\n            expire.setTime(expire.getTime() + (expires * 1000));\n\n            options = {\n                expires: expire,\n                path: this.cookiePath,\n                domain: this.cookieDomain\n            };\n\n            return $.cookie(name, value, options);\n        },\n\n        unset: function (name) {\n            this.init();\n\n            name = this.cookiePrefix + name;\n\n            options = {\n                path: this.cookiePath,\n                domain: this.cookieDomain\n            };\n            return $.removeCookie(name, options);\n        }\n    }\n})\n(jQuery, window);","(function ($, window) {\n    window.MyBB = window.MyBB || {};\n\n    window.MyBB.Spinner = {\n        inProgresses: 0,\n        add: function () {\n            this.inProgresses++;\n            if (this.inProgresses == 1) {\n                $(\"#spinner\").show();\n            }\n        },\n        remove: function () {\n            this.inProgresses--;\n            if (this.inProgresses == 0) {\n                $(\"#spinner\").hide();\n            }\n        }\n    }\n})\n(jQuery, window);","(function ($, window) {\n    window.MyBB = window.MyBB || {};\n    \n    window.MyBB.Modals = function Modals()\n    {\n        $(\"*[data-modal]\").on(\"click\", this.toggleModal).bind(this);\n        $.modal.defaults.closeText = 'x';\n    };\n\n    window.MyBB.Modals.prototype.toggleModal = function toggleModal(event)\n    {\n        event.preventDefault();\n\n        // Check to make sure we're clicking the link and not a child of the link\n        if (event.target.nodeName === \"A\") {\n        // Woohoo, it's the link!\n            var modalOpener = event.target,\n                modalSelector = $(modalOpener).data(\"modal\"),\n                modalFind = $(modalOpener).data(\"modal-find\"),\n                modal = $('<div/>', {\n                    \"class\": \"modal-dialog\",\n                    closeText: ''\n                }),\n                modalContent = \"\";\n        } else {\n            // Nope, it's one of those darn children.\n            var modalOpener = event.target,\n                modalSelector = $(modalOpener).parent().data(\"modal\"),\n                modalFind = $(modalOpener).data(\"modal-find\"),\n                modal = $('<div/>', {\n                    \"class\": \"modal-dialog\",\n                    closeText: ''\n                }),\n                modalContent = \"\";\n        }\n\n        if (modalSelector.substring(0, 1) === \".\" || modalSelector.substring(0, 1) === \"#\") {\n            // Assume using a local, existing HTML element.\n            modalContent = $(modalSelector).html();\n            modal.html(modalContent);\n            modal.appendTo(\"body\").modal({\n                zIndex: 1000,\n                closeText: ''\n            });\n            $('.modalHide').hide();\n            $(\"input[type=number]\").stepper();\n            $(\".password-toggle\").hideShowPassword(false, true);\n            new window.MyBB.Avatar();\n        } else {\n            // Assume modal content is coming from an AJAX request\n\n            // data-modal-find is optional, default to \"#content\"\n            if (modalFind === undefined) {\n                modalFind = \"#content\";\n            }\n\n            MyBB.Spinner.add();\n\n            var modalParams = $(event.currentTarget).attr('data-modal-params');\n            if (modalParams) {\n                modalParams = JSON.parse(modalParams);\n                console.log(modalParams);\n            } else {\n                modalParams = {};\n            }\n\n            $.get('/'+modalSelector, modalParams, function (response) {\n                var responseObject = $(response);\n\n                modalContent = $(modalFind, responseObject).html();\n                modal.html(modalContent);\n                modal.appendTo(\"body\").modal({\n                    zIndex: 1000,\n                    closeText: ''\n                });\n                $('.modalHide').hide();\n                $(\"input[type=number]\").stepper();\n                $(\".password-toggle\").hideShowPassword(false, true);\n                new window.MyBB.Avatar();\n\n                // Remove modal after close\n                modal.on($.modal.CLOSE, function () {\n                    $(this).remove();\n                })\n            }).always(function () {\n                MyBB.Spinner.remove();\n            });\n        }\n\n    };\n\n    var modals = new window.MyBB.Modals(); // TODO: put this elsewhere :)\n})(jQuery, window);\n","(function ($, window) {\n    window.MyBB = window.MyBB || {};\n\n    window.MyBB.Posts = function Posts()\n    {\n        // Show and hide posts\n        $(\".postToggle\").on(\"click\", this.togglePost).bind(this);\n\n\n        // Confirm Delete\n        $(\".delete a\").on(\"click\", $.proxy(this.confirmDelete, this));\n    };\n\n    // Show and hide posts\n    window.MyBB.Posts.prototype.togglePost = function togglePost(event)\n    {\n        event.preventDefault();\n        // Are we minimized or not?\n        if ($(event.target).hasClass(\"fa-minus\")) {\n        // Perhaps instead of hide, apply a CSS class?\n            $(event.target).parent().parent().parent().addClass(\"post--hidden\");\n            // Make button a plus sign for expanding\n            $(event.target).addClass(\"fa-plus\");\n            $(event.target).removeClass(\"fa-minus\");\n        } else {\n            // We like this person again\n            $(event.target).parent().parent().parent().removeClass(\"post--hidden\");\n            // Just in case we change our mind again, show the hide button\n            $(event.target).addClass(\"fa-minus\");\n            $(event.target).removeClass(\"fa-show\");\n        }\n    };\n\n    // Confirm Delete\n    window.MyBB.Posts.prototype.confirmDelete = function confirmDelete(event)\n    {\n        return confirm(Lang.get('topic.confirmDelete'));\n    };\n\n    var posts = new window.MyBB.Posts();\n\n})(jQuery, window);\n","(function ($, window) {\n    window.MyBB = window.MyBB || {};\n    \n    window.MyBB.Polls = function Polls()\n    {\n        this.optionElement = $('#option-simple').clone().attr('id', '').removeClass('hidden').addClass('poll-option').hide();\n        $('#option-simple').remove();\n\n        this.removeOption($('#add-poll .poll-option'));\n\n        $('#new-option').click($.proxy(this.addOption, this));\n\n        $('#poll-maximum-options').hide();\n\n        $('#poll-is-multiple').change($.proxy(this.toggleMaxOptionsInput, this)).change();\n\n        var $addPollButton = $(\"#add-poll-button\");\n        $addPollButton.click($.proxy(this.toggleAddPoll, this));\n        if ($addPollButton.length) {\n            if ($('#add-poll-input').val() === '1') {\n                $('#add-poll').slideDown();\n            }\n        }\n\n        this.timePicker();\n    };\n\n    window.MyBB.Polls.prototype.timePicker = function timePicker()\n    {\n        $('#poll-end-at').DateTimePicker({\n            format: 'Y-m-d H:i:s',\n            lang: 'mybb',\n            i18n: {\n                mybb: {\n                    months: [\n                        Lang.get('general.months.january'),\n                        Lang.get('general.months.february'),\n                        Lang.get('general.months.march'),\n                        Lang.get('general.months.april'),\n                        Lang.get('general.months.may'),\n                        Lang.get('general.months.june'),\n                        Lang.get('general.months.july'),\n                        Lang.get('general.months.august'),\n                        Lang.get('general.months.september'),\n                        Lang.get('general.months.october'),\n                        Lang.get('general.months.november'),\n                        Lang.get('general.months.december')\n                    ],\n                    dayOfWeek: [\n                        Lang.get('general.dayOfWeek.sun'),\n                        Lang.get('general.dayOfWeek.mon'),\n                        Lang.get('general.dayOfWeek.tue'),\n                        Lang.get('general.dayOfWeek.wed'),\n                        Lang.get('general.dayOfWeek.thu'),\n                        Lang.get('general.dayOfWeek.fri'),\n                        Lang.get('general.dayOfWeek.sat')\n                    ]\n                }\n            },\n            minDate: 0\n        });\n    };\n\n    window.MyBB.Polls.prototype.toggleAddPoll = function toggleAddPoll()\n    {\n        if ($('#add-poll-input').val() === '1') {\n            $('#add-poll-input').val(0);\n            $('#add-poll').slideUp();\n        } else {\n            $('#add-poll-input').val(1);\n            $('#add-poll').slideDown();\n        }\n        return false;\n    };\n\n    window.MyBB.Polls.prototype.addOption = function addOption(event)\n    {\n        var num_options = $('#add-poll .poll-option').length;\n        if (num_options >= 10) { // TODO: settings\n            alert(Lang.choice('poll.errorManyOptions', 10)); // TODO: JS Error\n            return false;\n        }\n        var $option = this.optionElement.clone();\n        $option.find('input').attr('name', 'option['+(num_options+1)+']');\n        $('#add-poll .poll-option').last().after($option);\n        $option.slideDown();\n        this.removeOption($option);\n        return false;\n    };\n\n    window.MyBB.Polls.prototype.removeOption = function bindRemoveOption($parent)\n    {\n        $parent.find('.remove-option').click($.proxy(function (event) {\n            var $me = $(event.target),\n                $myParent = $me.parents('.poll-option');\n            if ($('.poll-option').length <= 2) { // TODO: settings\n                alert(Lang.choice('poll.errorFewOptions', 2)); // TODO: JS Error\n                return false;\n            }\n\n            $myParent.slideUp(500);\n\n            setTimeout($.proxy(function () {\n                $myParent.remove();\n                this.fixOptionsName();\n            }, this), 500);\n        }, this));\n        if (!Modernizr.touch) {\n            $parent.find('.remove-option').powerTip({ placement: 's', smartPlacement: true });\n        }\n    };\n\n    window.MyBB.Polls.prototype.fixOptionsName = function () {\n        var i = 0;\n        $('#add-poll .poll-option').each(function () {\n            i++;\n            $(this).find('input').attr('name', 'option['+i+']');\n        });\n    };\n\n    window.MyBB.Polls.prototype.toggleMaxOptionsInput = function toggleMaxOptionsInput(event)\n    {\n        me = event.target;\n        if ($(me).is(':checked')) {\n            $('#poll-maximum-options').slideDown();\n        } else {\n            $('#poll-maximum-options').slideUp();\n        }\n    };\n\n    var polls = new window.MyBB.Polls();\n\n})(jQuery, window);\n","(function ($, window) {\n    window.MyBB = window.MyBB || {};\n\n    window.MyBB.Quotes = function Quotes()\n    {\n\n        // MultiQuote\n        $(\".quote-button\").on(\"click\", this.multiQuoteButton.bind(this));\n\n        this.showQuoteBar();\n\n        $(\".quote-bar__select\").on(\"click\", $.proxy(this.addQuotes, this));\n        $(\".quote-bar__view\").on(\"click\", $.proxy(this.viewQuotes, this));\n        $(\".quote-bar__deselect\").on(\"click\", $.proxy(this.removeQuotes, this));\n\n        $('.quick-quote .fast').on('click', $.proxy(this.quickQuote, this));\n        $('.quick-quote .add').on('click', $.proxy(this.quickAddQuote, this));\n\n        $('.quote__select').on(\"click\", $.proxy(this.quoteAdd, this));\n        $('.quote__remove').on(\"click\", $.proxy(this.quoteRemove, this));\n        $(\"body\").on(\"mouseup\", $.proxy(this.checkQuickQuote, this));\n\n        this.quoteButtons();\n    };\n\n    window.MyBB.Quotes.prototype.quickQuote = function quickQuote(event)\n    {\n        var $me = $(event.target);\n        if (!$me.hasClass('quick-quote')) {\n            $me = $me.parents('.quick-quote');\n        }\n\n        var $post = $me.parents('.post');\n\n        if ($me.data('content')) {\n            $content = $('<div/>');\n            $content.html($me.data('content'));\n            this.addQuote($post.data('postid'), $post.data('type'), $content.text());\n        }\n        this.hideQuickQuote();\n    }\n\n    window.MyBB.Quotes.prototype.quickAddQuote = function quickAddQuote(event)\n    {\n        var $me = $(event.target),\n            quotes = this.getQuotes();\n        if (!$me.hasClass('quick-quote')) {\n            $me = $me.parents('.quick-quote');\n        }\n\n        var $post = $me.parents('.post');\n\n        if ($me.data('content')) {\n            $content = $('<div/>');\n            $content.html($me.data('content'));\n            quotes.push({\n                'id': $post.data('type') + '_' + $post.data('postid'),\n                'data': $content.text()\n            });\n            MyBB.Cookie.set('quotes', JSON.stringify(quotes));\n\n            this.showQuoteBar();\n        }\n        this.hideQuickQuote();\n    }\n\n    window.MyBB.Quotes.prototype.checkQuickQuote = function checkQuickQuote(event)\n    {\n        var $me = $(event.target);\n        if ($me.hasClass('quick-quote') || $me.parents('.quick-quote').length) {\n            return false;\n        }\n        if (!$me.hasClass('post')) {\n            $me = $me.parents('.post');\n        }\n\n        if ($me && $me.length) {\n            var pid = $me.data('postid');\n\n            if ($.trim(window.getSelection().toString())) {\n                if (elementContainsSelection($me.find('.post__body')[0])) {\n                    this.showQuickQuote(pid);\n                } else {\n                    this.hideQuickQuote();\n                }\n            } else {\n                this.hideQuickQuote();\n            }\n        } else {\n            this.hideQuickQuote();\n        }\n    }\n\n    window.MyBB.Quotes.prototype.showQuickQuote = function showQuckQuote(pid)\n    {\n        var selection = window.getSelection(),\n            range = selection.getRangeAt(0),\n            rect = range.getBoundingClientRect();\n        $elm = $(\"#post-\" + pid).find('.quick-quote').show().data('content', $.trim(window.getSelection().toString()));\n        $elm.css({\n            'top': (window.scrollY + rect.top - $elm.outerHeight() - 4) + 'px',\n            'left': (window.scrollX + rect.left - (($elm.outerWidth() - rect.width) / 2)) + 'px'\n        });\n    }\n\n    window.MyBB.Quotes.prototype.hideQuickQuote = function () {\n        $('.post .quick-quote').hide().data('content', '');\n    }\n\n    window.MyBB.Quotes.prototype.getQuotes = function getQuotes()\n    {\n        var quotes = MyBB.Cookie.get('quotes'),\n            myQuotes = [];\n        if (!quotes) {\n            quotes = [];\n        } else {\n            quotes = JSON.parse(quotes);\n        }\n        $.each(quotes, function (key, quote) {\n            if (quote != null) {\n                myQuotes.push(quote);\n            }\n        });\n\n        MyBB.Cookie.set('quotes', JSON.stringify(myQuotes));\n        return myQuotes;\n    };\n\n    // MultiQuote\n    window.MyBB.Quotes.prototype.multiQuoteButton = function multiQuoteButton(event)\n    {\n        event.preventDefault();\n        var $me = $(event.target);\n        if (!$me.hasClass('quote-button')) {\n            $me = $me.parents('.quote-button');\n        }\n        var $post = $me.parents('.post');\n\n        var postId = parseInt($post.data('postid')),\n            type = $post.data('type'),\n            quotes = this.getQuotes();\n\n        if (postId) {\n            var removed = false;\n            $.each(quotes, function (key, quote) {\n                if (typeof quote != 'string') {\n                    return;\n                }\n                if (quote == type + '_' + postId) {\n                    delete quotes[key];\n                    removed = true;\n                }\n            });\n            if (!removed) {\n                quotes.push(type + '_' + postId);\n                $me.find('.quote-button__add').hide();\n                $me.find('.quote-button__remove').show();\n            } else {\n                $me.find('.quote-button__add').show();\n                $me.find('.quote-button__remove').hide();\n            }\n\n            MyBB.Cookie.set('quotes', JSON.stringify(quotes));\n\n            this.showQuoteBar();\n            return false;\n        }\n\n    };\n\n    window.MyBB.Quotes.prototype.showQuoteBar = function showQuoteBar()\n    {\n        var quotes = this.getQuotes();\n\n        if (quotes.length) {\n            $(\".quote-bar\").show();\n        } else {\n            $(\".quote-bar\").hide();\n        }\n    };\n\n    window.MyBB.Quotes.prototype.addQuotes = function addQuotes()\n    {\n        var quotes = this.getQuotes(),\n            $quoteBar = $(\".quote-bar\"),\n            $textarea = $($quoteBar.data('textarea'));\n\n        MyBB.Spinner.add();\n\n        $.ajax({\n            url: '/post/quotes',\n            data: {\n                'posts': quotes,\n                '_token': $quoteBar.parents('form').find('input[name=_token]').val()\n            },\n            method: 'POST'\n        }).done(function (json) {\n            if (json.error) {\n                alert(json.error);// TODO: js error\n            } else {\n                var value = $textarea.val();\n                if (value && value.substr(-2) != \"\\n\\n\") {\n                    if (value.substr(-1) != \"\\n\") {\n                        value += \"\\n\";\n                    }\n                    value += \"\\n\";\n                }\n                $textarea.val(value + json.message).focus();\n            }\n            $.modal.close();\n        }).always(function () {\n            MyBB.Spinner.remove();\n        });\n\n        $quoteBar.hide();\n        MyBB.Cookie.unset('quotes');\n        this.quoteButtons();\n        return false;\n    };\n\n    window.MyBB.Quotes.prototype.addQuote = function addQuote(postid, type, content)\n    {\n        var $textarea = $(\"#message\");\n\n        MyBB.Spinner.add();\n\n        $.ajax({\n            url: '/post/quotes',\n            data: {\n                'posts': [\n                    {\n                        'id': type + '_' + postid,\n                        'data': content\n                }\n                ],\n                '_token': $(\".quote-bar\").parents('form').find('input[name=_token]').val()\n            },\n            method: 'POST'\n        }).done(function (json) {\n            if (json.error) {\n                alert(json.error);// TODO: js error\n            } else {\n                var value = $textarea.val();\n                if (value && value.substr(-2) != \"\\n\\n\") {\n                    if (value.substr(-1) != \"\\n\") {\n                        value += \"\\n\";\n                    }\n                    value += \"\\n\";\n                }\n                $textarea.val(value + json.message).focus();\n            }\n        }).always(function () {\n            MyBB.Spinner.remove();\n        });\n\n        this.hideQuickQuote();\n\n        return false;\n    };\n\n    window.MyBB.Quotes.prototype.viewQuotes = function viewQuotes()\n    {\n        MyBB.Spinner.add();\n\n        $.ajax({\n            url: '/post/quotes/all',\n            data: {\n                'posts': this.getQuotes(),\n                '_token': $(\".quote-bar\").parents('form').find('input[name=_token]').val()\n            },\n            method: 'POST'\n        }).done($.proxy(function (data) {\n            var modalContent = $(\"#content\", $(data)),\n                modal = $('<div/>', {\n                    \"class\": \"modal-dialog view-quotes\",\n                    closeText: ''\n                });\n                modalContent.find('.view-quotes__quotes').css({\n                    'max-height': ($(window).height()-250)+'px'\n                });\n                modal.html(modalContent.html());\n                modal.appendTo(\"body\").modal({\n                    zIndex: 1000,\n                    closeText: ''\n                });\n\n                if (Modernizr.touch) {\n                    $('.radio-buttons .radio-button, .checkbox-buttons .checkbox-button').click(function () {\n\n                    });\n                } else {\n                    $('span.icons i, a, .caption, time').powerTip({ placement: 's', smartPlacement: true });\n                }\n\n                $('.quote__select').on(\"click\", $.proxy(this.quoteAdd, this));\n                $('.quote__remove').on(\"click\", $.proxy(this.quoteRemove, this));\n                $(\".select-all-quotes\").on(\"click\", $.proxy(this.addQuotes, this));\n                $('.modal-hide').hide();\n        }, this)).always(function () {\n            MyBB.Spinner.remove();\n        });\n\n        this.hideQuickQuote();\n\n        return false;\n    };\n\n    window.MyBB.Quotes.prototype.removeQuotes = function removeQuotes()\n    {\n        $quoteBar = $(\".quote-bar\");\n        $quoteBar.hide();\n        MyBB.Cookie.unset('quotes');\n        this.quoteButtons();\n        return false;\n    };\n\n    window.MyBB.Quotes.prototype.quoteButtons = function quoteButtons()\n    {\n        var quotes = this.getQuotes();\n\n        $('.quote-button__add').show();\n        $('.quote-button__remove').hide();\n\n        $.each(quotes, function (key, quote) {\n            if (typeof quote != 'string') {\n                return;\n            }\n            quote = quote.split('_');\n            type = quote[0];\n            postId = parseInt(quote[1]);\n            var $quoteButton = $(\"#post-\" + postId + \"[data-type='\" + type + \"']\").find('.quoteButton');\n            $quoteButton.find('.quote-button__add').hide();\n            $quoteButton.find('.quote-button__remove').show();\n        })\n    }\n\n    window.MyBB.Quotes.prototype.quoteAdd = function quoteAdd(event)\n    {\n        var $me = $(event.target),\n            $post = $me.parents('.content-quote'),\n            $textarea = $(\"#message\"),\n            quotes = this.getQuotes();\n\n        var value = $textarea.val();\n        if (value && value.substr(-2) != \"\\n\\n\") {\n            if (value.substr(-1) != \"\\n\") {\n                value += \"\\n\";\n            }\n            value += \"\\n\";\n        }\n        $textarea.val(value + $post.data('quote')).focus();\n\n        delete quotes[$post.data('id')];\n        MyBB.Cookie.set('quotes', JSON.stringify(quotes));\n        $post.slideUp('fast');\n\n        if (this.getQuotes().length == 0) {\n            $.modal.close();\n        }\n\n        while ($post.next().length) {\n            $post = $post.next();\n            $post.data('id', $post.data('id')-1);\n        }\n\n        this.quoteButtons();\n        this.showQuoteBar();\n    }\n\n    window.MyBB.Quotes.prototype.quoteRemove = function quoteRemove(event)\n    {\n        var $me = $(event.target),\n            $post = $me.parents('.content-quote'),\n            quotes = this.getQuotes();\n\n        delete quotes[$post.data('id')];\n        MyBB.Cookie.set('quotes', JSON.stringify(quotes));\n        $post.slideUp('fast');\n\n        if (this.getQuotes().length == 0) {\n            $.modal.close();\n        }\n\n        while ($post.next().length) {\n            $post = $post.next();\n            $post.data('id', $post.data('id')-1);\n        }\n\n        this.quoteButtons();\n        this.showQuoteBar();\n        return false;\n    }\n\n    var quotes = new window.MyBB.Quotes();\n\n\n    // Helper functions\n    // http://stackoverflow.com/questions/8339857\n    function isOrContains(node, container)\n    {\n        while (node) {\n            if (node === container) {\n                return true;\n            }\n            node = node.parentNode;\n        }\n        return false;\n    }\n\n    function elementContainsSelection(el)\n    {\n        var sel;\n        if (window.getSelection) {\n            sel = window.getSelection();\n            if (sel.rangeCount > 0) {\n                for (var i = 0; i < sel.rangeCount; ++i) {\n                    if (!isOrContains(sel.getRangeAt(i).commonAncestorContainer, el)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        } else if ((sel = document.selection) && sel.type != \"Control\") {\n            return isOrContains(sel.createRange().parentElement(), el);\n        }\n        return false;\n    }\n\n})\n(jQuery, window);","(function ($, window) {\n    window.MyBB = window.MyBB || {};\n\n    window.MyBB.Avatar = function Avatar()\n    {\n        this.dropAvatar();\n    };\n\n    window.MyBB.Avatar.prototype.dropAvatar = function dropAvatar()\n    {\n        var $avatarDrop = $('#avatar-drop');\n        if ($avatarDrop.length == 0 || $avatarDrop.is(':visible') == $('#avatar-drop-area').is(':visible')) {\n            return;\n        }\n\n        var avatarDropUrl = $avatarDrop.attr('action');\n        Dropzone.autoDiscover = false;\n        var avatarDrop = new Dropzone(\"#avatar-drop\", {\n            url: avatarDropUrl + \"?ajax=1\",\n            acceptedFiles: \"image/*\",\n            clickable: '#file-input',\n            paramName: \"avatar_file\",\n            thumbnailWidth: null,\n            thumbnailHeight: null,\n            uploadMultiple: false,\n            init: function () {\n                $(\"#avatar-drop-area\").show();\n            },\n            previewTemplate: '<div style=\"display:none\" />'\n        });\n\n        avatarDrop.on(\"thumbnail\", function (file, dataUrl) {\n            $(\"#crop\").find('.jcrop').find('img').attr('src', dataUrl);//TODO: use better selection\n        });\n\n        avatarDrop.on(\"sending\", function (file) {\n            MyBB.Spinner.add();\n        });\n        avatarDrop.on(\"complete\", function () {\n            MyBB.Spinner.remove();\n        });\n        avatarDrop.on(\"success\", function (file) {\n            var data = $.parseJSON(file.xhr.responseText);\n            if (data.needCrop == true) {\n                $(\"<a />\").data('modal', '#crop').click((new MyBB.Modals()).toggleModal).click(); // TODO: create a method in modal.js for it\n                var $jcrop = $('.modal').find('.jcrop');\n\n                function JcropUpdateInputs(c)\n                {\n                    $jcrop.find('.jcrop-x').val(c.x);\n                    $jcrop.find('.jcrop-y').val(c.y);\n                    $jcrop.find('.jcrop-x2').val(c.x2);\n                    $jcrop.find('.jcrop-y2').val(c.y2);\n                    $jcrop.find('.jcrop-w').val(c.w);\n                    $jcrop.find('.jcrop-h').val(c.h);\n                }\n\n                $jcrop.find('img').Jcrop({\n                    onChange: JcropUpdateInputs,\n                    onSelect: JcropUpdateInputs\n                });\n\n                $('.modal').find('.crop-img').click(function () {\n                    MyBB.Spinner.add();\n                    $.post('/account/avatar/crop?ajax=1', {\n                        x: $jcrop.find('.jcrop-x').val(),\n                        y: $jcrop.find('.jcrop-y').val(),\n                        x2: $jcrop.find('.jcrop-x2').val(),\n                        y2: $jcrop.find('.jcrop-y2').val(),\n                        w: $jcrop.find('.jcrop-w').val(),\n                        h: $jcrop.find('.jcrop-h').val(),\n                        \"_token\": $('input[name=\"_token\"]').val()\n                    }).done(function (data) {\n                        if (data.success) {\n                            alert(data.message); // TODO: JS Message\n                            $.modal.close();\n                            $(\".my-avatar\").attr('src', data.avatar);\n                        } else {\n                            alert(data.error);// TODO: JS Error\n                        }\n                    }).always(function () {\n                        MyBB.Spinner.remove();\n                    });\n                });\n            }\n        });\n    }\n\n    var avatar = new window.MyBB.Avatar();\n\n})(jQuery, window);","$('html').addClass('js');\n\n$(function () {\n\n    $('.nojs').hide();\n\n    if (Modernizr.touch) {\n        $('.radio-buttons .radio-button, .checkbox-buttons .checkbox-button').click(function () {\n\n        });\n    } else {\n        $('span.icons i, a, .caption, time').powerTip({ placement: 's', smartPlacement: true });\n    }\n\n    // var userNavigationDropdown = new Dropit('.user-navigation__links', { submenuEl: 'div.dropdown' });\n    // var mainMenuDropdown = new Dropit('.main-menu__container');\n    var dropdownMenu = new Dropit('.dropdown-menu', { submenuEl: 'ul.dropdown', triggerEl: 'span.dropdown-button' });\n    \n    // $('.user-navigation__links, #main-menu').dropit({ submenuEl: 'div.dropdown' });\n    // $('.dropdown-menu').dropit({ submenuEl: 'ul.dropdown', triggerEl: 'span.dropdown-button' });\n    $(\"input[type=number]\").stepper();\n    $(\".password-toggle\").hideShowPassword(false, true);\n\n    $(\"#search .search-button\").click(function (event) {\n        event.preventDefault();\n        $(\"#search .search-container\").slideDown();\n    });\n\n    autosize($('.post textarea'));\n\n    $('a.show-menu__link').click(function (e) {\n        if (menu == 0) {\n            menu = 1;\n            openMenu(e);\n        } else {\n            menu = 0;\n            closeMenu(e);\n        }\n    });\n\n/*\t$('.post.reply textarea.editor, .form textarea.editor').sceditor({\n\t\tplugins: 'bbcode',\n\t\tstyle: 'js/vendor/sceditor/jquery.sceditor.default.min.css',\n\t\temoticonsRoot: 'assets/images/',\n\t\ttoolbar: 'bold,italic,underline|font,size,color,removeformat|left,center,right|image,link,unlink|emoticon,youtube|bulletlist,orderedlist|quote,code|source',\n\t\tresizeWidth: false,\n\t\tautofocus: false,\n\t\tautofocusEnd: false\n\t});*/\n});\n\n// Overwrite the powertip helper function - it's nearly the same\nfunction getTooltipContent(element)\n{\n    var tipText = element.data(DATA_POWERTIP),\n        tipObject = element.data(DATA_POWERTIPJQ),\n        tipTarget = element.data(DATA_POWERTIPTARGET),\n        targetElement,\n        content;\n\n    if (tipText) {\n        if ($.isFunction(tipText)) {\n            tipText = tipText.call(element[0]);\n        }\n        content = tipText;\n    } else if (tipObject) {\n        if ($.isFunction(tipObject)) {\n            tipObject = tipObject.call(element[0]);\n        }\n        if (tipObject.length > 0) {\n            content = tipObject.clone(true, true);\n        }\n    } else if (tipTarget) {\n        targetElement = $('#' + tipTarget);\n        if (targetElement.length > 0) {\n            content = targetElement.html();\n        }\n    }\n\n    // Except we're escaping html\n    return escapeHTML(content);\n}\n\n// Source: http://stackoverflow.com/questions/24816/escaping-html-strings-with-jquery\n\nvar entityMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    \"/\": '&#x2F;'\n};\n\nfunction escapeHTML(string)\n{\n    if (typeof string == 'string') {\n        return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n            return entityMap[s];\n        });\n    }\n\n    return string;\n}\n\nfunction submitFormAsGet(id, newRoute)\n{\n    var form = $('#' + id);\n    form.find(\"input[name=_token]\").val('');\n\n    if (newRoute != null) {\n        form.attr('action', newRoute);\n    }\n\n    form.attr('method', 'get').submit();\n    return false;\n}\n\nfunction openMenu(e)\n{\n    e.preventDefault();\n    $(\"body\").animate({'background-position-x': '0px'}, 200, function () { });\n    $(\".sidebar-menu\").animate({marginLeft: \"0px\"}, 200, function () { });\n    $(\".page-body\").animate({marginLeft: \"225px\", marginRight: \"-225px\"}, 200, function () { });\n}\n\nfunction closeMenu(e)\n{\n    e.preventDefault();\n    $(\"body\").animate({'background-position-x': '-225px'}, 200, function () { });\n    $(\".sidebar-menu\").animate({marginLeft: \"-225px\"}, 200, function () { });\n    $(\".page-body\").animate({marginLeft: \"0\", marginRight: \"0\"}, 200, function () { });\n}\n","(function ($, window) {\n    window.MyBB = window.MyBB || {};\n\n    window.MyBB.Moderation = function Moderation()\n    {\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            }\n        });\n\n        // inline moderation click handling\n        $('a[data-moderate]').click($.proxy(function (e) {\n            e.preventDefault();\n\n            MyBB.Spinner.add();\n\n            var moderation_content = $('[data-moderation-content]').first();\n            $.post('/moderate', {\n                moderation_name: $(e.currentTarget).attr('data-moderate'),\n                moderation_content: moderation_content.attr('data-moderation-content'),\n                moderation_ids: window.MyBB.Moderation.getSelectedIds(),\n                moderation_source_type: moderation_content.attr('data-moderation-source-type'),\n                moderation_source_id: moderation_content.attr('data-moderation-source-id')\n            }, function (response) {\n                document.location.reload();\n            });\n        }, this));\n\n        // inline reverse moderation click handling\n        $('a[data-moderate-reverse]').click($.proxy(function (e) {\n            e.preventDefault();\n\n            MyBB.Spinner.add();\n\n            var moderation_content = $('[data-moderation-content]').first();\n            $.post('/moderate/reverse', {\n                moderation_name: $(e.currentTarget).attr('data-moderate-reverse'),\n                moderation_content: moderation_content.attr('data-moderation-content'),\n                moderation_ids: window.MyBB.Moderation.getSelectedIds(),\n                moderation_source_type: moderation_content.attr('data-moderation-source-type'),\n                moderation_source_id: moderation_content.attr('data-moderation-source-id')\n            }, function (response) {\n                document.location.reload();\n            });\n        }, this));\n\n        // moderation bar clear selection handling\n        $('.clear-selection a').click(function (e) {\n            $('[data-moderation-content] input[type=checkbox]:checked').removeAttr('checked');\n            $('[data-moderation-content] .highlight').removeClass('highlight');\n            $('.inline-moderation').removeClass('floating');\n        });\n\n        // post level inline moderation checkbox handling\n        $(\".post :checkbox\").change(function () {\n            $(this).closest(\".post\").toggleClass(\"highlight\", this.checked);\n\n            var checked_boxes = $('.highlight').length;\n\n            if (checked_boxes == 1) {\n                $('.inline-moderation').addClass('floating');\n            }\n\n            if (checked_boxes > 1) {\n                $('li[data-moderation-multi]').show();\n            } else {\n                $('li[data-moderation-multi]').hide();\n            }\n\n            if (checked_boxes == 0) {\n                $('.inline-moderation').removeClass('floating');\n            }\n\n            $('.inline-moderation .selection-count').text(' ('+checked_boxes+')')\n        });\n\n        // topic level inline moderation checkbox handling\n        $(\".topic-list .topic :checkbox\").change(function () {\n            $(this).closest(\".topic\").toggleClass(\"highlight\", this.checked);\n\n            var checked_boxes = $('.highlight').length;\n\n            if (checked_boxes == 1) {\n                $('.inline-moderation').addClass('floating');\n            }\n\n            if (checked_boxes > 1) {\n                $('li[data-moderation-multi]').show();\n            } else {\n                $('li[data-moderation-multi]').hide();\n            }\n\n            if (checked_boxes == 0) {\n                $('.inline-moderation').removeClass('floating');\n            }\n\n            $('.inline-moderation .selection-count').text(' ('+checked_boxes+')')\n        });\n\n        $('li[data-moderation-multi]').hide();\n    };\n\n    // get the IDs of elements currently selected\n    window.MyBB.Moderation.getSelectedIds = function getSelectedIds()\n    {\n        return $('input[type=checkbox][data-moderation-id]:checked').map(function () {\n            return $(this).attr('data-moderation-id');\n        }).get();\n    };\n\n    // grab the current selection and inject it into the modal so we can submit through a normal form\n    window.MyBB.Moderation.injectModalParams = function injectFormData(element)\n    {\n        var moderation_content = $('[data-moderation-content]').first();\n        $(element).attr('data-modal-params', JSON.stringify({\n            moderation_content: moderation_content.attr('data-moderation-content'),\n            moderation_ids: window.MyBB.Moderation.getSelectedIds(),\n            moderation_source_type: moderation_content.attr('data-moderation-source-type'),\n            moderation_source_id: moderation_content.attr('data-moderation-source-id')\n        }));\n    };\n\n    var moderation = new window.MyBB.Moderation();\n\n})(jQuery, window);\n"],"sourceRoot":"/source/"}