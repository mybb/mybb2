{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function ($, window) {\n\twindow.MyBB = window.MyBB || {};\n\n\twindow.MyBB.Avatar = function Avatar() {\n\t\tthis.dropAvatar();\n\t};\n\n\twindow.MyBB.Avatar.prototype.dropAvatar = function dropAvatar() {\n\t\tvar $avatarDrop = $('#avatar-drop');\n\t\tif ($avatarDrop.length == 0 || $avatarDrop.is(':visible') == $('#avatar-drop-area').is(':visible')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar avatarDropUrl = $avatarDrop.attr('action');\n\t\tDropzone.autoDiscover = false;\n\t\tvar avatarDrop = new Dropzone(\"#avatar-drop\", {\n\t\t\turl: avatarDropUrl + \"?ajax=1\",\n\t\t\tacceptedFiles: \"image/*\",\n\t\t\tclickable: '#file-input',\n\t\t\tparamName: \"avatar_file\",\n\t\t\tthumbnailWidth: null,\n\t\t\tthumbnailHeight: null,\n\t\t\tuploadMultiple: false,\n\t\t\tinit: function init() {\n\t\t\t\t$(\"#avatar-drop-area\").show();\n\t\t\t},\n\t\t\tpreviewTemplate: '<div style=\"display:none\" />'\n\t\t});\n\n\t\tavatarDrop.on(\"thumbnail\", function (file, dataUrl) {\n\t\t\t$(\"#crop\").find('.jcrop').find('img').attr('src', dataUrl); //TODO: use better selection\n\t\t});\n\n\t\tavatarDrop.on(\"sending\", function (file) {\n\t\t\tMyBB.Spinner.add();\n\t\t});\n\t\tavatarDrop.on(\"complete\", function () {\n\t\t\tMyBB.Spinner.remove();\n\t\t});\n\t\tavatarDrop.on(\"success\", function (file) {\n\t\t\tvar data = $.parseJSON(file.xhr.responseText);\n\t\t\tif (data.needCrop == true) {\n\t\t\t\tvar JcropUpdateInputs = function JcropUpdateInputs(c) {\n\t\t\t\t\t$jcrop.find('.jcrop-x').val(c.x);\n\t\t\t\t\t$jcrop.find('.jcrop-y').val(c.y);\n\t\t\t\t\t$jcrop.find('.jcrop-x2').val(c.x2);\n\t\t\t\t\t$jcrop.find('.jcrop-y2').val(c.y2);\n\t\t\t\t\t$jcrop.find('.jcrop-w').val(c.w);\n\t\t\t\t\t$jcrop.find('.jcrop-h').val(c.h);\n\t\t\t\t};\n\n\t\t\t\t$(\"<a />\").data('modal', '#crop').click(new MyBB.Modals().toggleModal).click(); // TODO: create a method in modal.js for it\n\t\t\t\tvar $jcrop = $('.modal').find('.jcrop');\n\n\t\t\t\t$jcrop.find('img').Jcrop({\n\t\t\t\t\tonChange: JcropUpdateInputs,\n\t\t\t\t\tonSelect: JcropUpdateInputs\n\t\t\t\t});\n\n\t\t\t\t$('.modal').find('.crop-img').click(function () {\n\t\t\t\t\tMyBB.Spinner.add();\n\t\t\t\t\t$.post('/account/avatar/crop?ajax=1', {\n\t\t\t\t\t\tx: $jcrop.find('.jcrop-x').val(),\n\t\t\t\t\t\ty: $jcrop.find('.jcrop-y').val(),\n\t\t\t\t\t\tx2: $jcrop.find('.jcrop-x2').val(),\n\t\t\t\t\t\ty2: $jcrop.find('.jcrop-y2').val(),\n\t\t\t\t\t\tw: $jcrop.find('.jcrop-w').val(),\n\t\t\t\t\t\th: $jcrop.find('.jcrop-h').val(),\n\t\t\t\t\t\t\"_token\": $('input[name=\"_token\"]').val()\n\t\t\t\t\t}).done(function (data) {\n\t\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\t\talert(data.message); // TODO: JS Message\n\t\t\t\t\t\t\t$.modal.close();\n\t\t\t\t\t\t\t$(\".my-avatar\").attr('src', data.avatar);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert(data.error); // TODO: JS Error\n\t\t\t\t\t\t}\n\t\t\t\t\t}).always(function () {\n\t\t\t\t\t\tMyBB.Spinner.remove();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tvar avatar = new window.MyBB.Avatar();\n})(jQuery, window);\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\n(function ($, window) {\n\twindow.MyBB = window.MyBB || {};\n\n\twindow.MyBB.Cookie = {\n\t\tcookiePrefix: '',\n\t\tcookiePath: '/',\n\t\tcookieDomain: '',\n\n\t\tinit: function init() {\n\t\t\tMyBB.Settings = MyBB.Settings || {};\n\t\t\tif (typeof MyBB.Settings.cookiePrefix != 'undefined') {\n\t\t\t\tthis.cookiePrefix = MyBB.Settings.cookiePrefix;\n\t\t\t}\n\t\t\tif (typeof MyBB.Settings.cookiePath != 'undefined') {\n\t\t\t\tthis.cookiePath = MyBB.Settings.cookiePath;\n\t\t\t}\n\t\t\tif (typeof MyBB.Settings.cookieDomain != 'undefined') {\n\t\t\t\tthis.cookieDomain = MyBB.Settings.cookieDomain;\n\t\t\t}\n\t\t},\n\n\t\tget: function get(name) {\n\t\t\tthis.init();\n\n\t\t\tname = this.cookiePrefix + name;\n\t\t\treturn $.cookie(name);\n\t\t},\n\n\t\tset: function set(name, value, expires) {\n\t\t\tthis.init();\n\n\t\t\tname = this.cookiePrefix + name;\n\t\t\tif (!expires) {\n\t\t\t\texpires = 157680000; // 5*365*24*60*60 => 5 years\n\t\t\t}\n\n\t\t\texpire = new Date();\n\t\t\texpire.setTime(expire.getTime() + expires * 1000);\n\n\t\t\toptions = {\n\t\t\t\texpires: expire,\n\t\t\t\tpath: this.cookiePath,\n\t\t\t\tdomain: this.cookieDomain\n\t\t\t};\n\n\t\t\treturn $.cookie(name, value, options);\n\t\t},\n\n\t\tunset: function unset(name) {\n\t\t\tthis.init();\n\n\t\t\tname = this.cookiePrefix + name;\n\n\t\t\toptions = {\n\t\t\t\tpath: this.cookiePath,\n\t\t\t\tdomain: this.cookieDomain\n\t\t\t};\n\t\t\treturn $.removeCookie(name, options);\n\t\t}\n\t};\n})(jQuery, window);\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\n(function ($, window) {\n\twindow.MyBB = window.MyBB || {};\n\n\twindow.MyBB.Modals = function Modals() {\n\t\t$(\"*[data-modal]\").on(\"click\", this.toggleModal).bind(this);\n\t\t$.modal.defaults.closeText = 'x';\n\t};\n\n\twindow.MyBB.Modals.prototype.toggleModal = function toggleModal(event) {\n\t\tevent.preventDefault();\n\n\t\t// Check to make sure we're clicking the link and not a child of the link\n\t\tif (event.target.nodeName === \"A\") {\n\t\t\t// Woohoo, it's the link!\n\t\t\tvar modalOpener = event.target,\n\t\t\t    modalSelector = $(modalOpener).data(\"modal\"),\n\t\t\t    modalFind = $(modalOpener).data(\"modal-find\"),\n\t\t\t    modal = $('<div/>', {\n\t\t\t\t\"class\": \"modal-dialog\",\n\t\t\t\tcloseText: ''\n\t\t\t}),\n\t\t\t    modalContent = \"\";\n\t\t} else {\n\t\t\t// Nope, it's one of those darn children.\n\t\t\tvar modalOpener = event.target,\n\t\t\t    modalSelector = $(modalOpener).parent().data(\"modal\"),\n\t\t\t    modalFind = $(modalOpener).data(\"modal-find\"),\n\t\t\t    modal = $('<div/>', {\n\t\t\t\t\"class\": \"modal-dialog\",\n\t\t\t\tcloseText: ''\n\t\t\t}),\n\t\t\t    modalContent = \"\";\n\t\t}\n\n\t\tif (modalSelector.substring(0, 1) === \".\" || modalSelector.substring(0, 1) === \"#\") {\n\t\t\t// Assume using a local, existing HTML element.\n\t\t\tmodalContent = $(modalSelector).html();\n\t\t\tmodal.html(modalContent);\n\t\t\tmodal.appendTo(\"body\").modal({\n\t\t\t\tzIndex: 1000,\n\t\t\t\tcloseText: ''\n\t\t\t});\n\t\t\t$('.modalHide').hide();\n\t\t\t$(\"input[type=number]\").stepper();\n\t\t\t$(\".password-toggle\").hideShowPassword(false, true);\n\t\t\tnew window.MyBB.Avatar();\n\t\t} else {\n\t\t\t// Assume modal content is coming from an AJAX request\n\n\t\t\t// data-modal-find is optional, default to \"#content\"\n\t\t\tif (modalFind === undefined) {\n\t\t\t\tmodalFind = \"#content\";\n\t\t\t}\n\n\t\t\tMyBB.Spinner.add();\n\n\t\t\tvar modalParams = $(event.currentTarget).attr('data-modal-params');\n\t\t\tif (modalParams) {\n\t\t\t\tmodalParams = JSON.parse(modalParams);\n\t\t\t\tconsole.log(modalParams);\n\t\t\t} else {\n\t\t\t\tmodalParams = {};\n\t\t\t}\n\n\t\t\t$.get('/' + modalSelector, modalParams, function (response) {\n\t\t\t\tvar responseObject = $(response);\n\n\t\t\t\tmodalContent = $(modalFind, responseObject).html();\n\t\t\t\tmodal.html(modalContent);\n\t\t\t\tmodal.appendTo(\"body\").modal({\n\t\t\t\t\tzIndex: 1000,\n\t\t\t\t\tcloseText: ''\n\t\t\t\t});\n\t\t\t\t$('.modalHide').hide();\n\t\t\t\t$(\"input[type=number]\").stepper();\n\t\t\t\t$(\".password-toggle\").hideShowPassword(false, true);\n\t\t\t\tnew window.MyBB.Avatar();\n\n\t\t\t\t// Remove modal after close\n\t\t\t\tmodal.on($.modal.CLOSE, function () {\n\t\t\t\t\t$(this).remove();\n\t\t\t\t});\n\t\t\t}).always(function () {\n\t\t\t\tMyBB.Spinner.remove();\n\t\t\t});\n\t\t}\n\t};\n\n\tvar modals = new window.MyBB.Modals(); // TODO: put this elsewhere :)\n})(jQuery, window);\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\n(function ($, window) {\n    window.MyBB = window.MyBB || {};\n\n    window.MyBB.Moderation = function Moderation() {\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            }\n        });\n\n        // inline moderation click handling\n        $('a[data-moderate]').click($.proxy(function (e) {\n            e.preventDefault();\n\n            MyBB.Spinner.add();\n\n            var moderation_content = $('[data-moderation-content]').first();\n            $.post('/moderate', {\n                moderation_name: $(e.currentTarget).attr('data-moderate'),\n                moderation_content: moderation_content.attr('data-moderation-content'),\n                moderation_ids: window.MyBB.Moderation.getSelectedIds(),\n                moderation_source_type: moderation_content.attr('data-moderation-source-type'),\n                moderation_source_id: moderation_content.attr('data-moderation-source-id')\n            }, function (response) {\n                document.location.reload();\n            });\n        }, this));\n\n        // inline reverse moderation click handling\n        $('a[data-moderate-reverse]').click($.proxy(function (e) {\n            e.preventDefault();\n\n            MyBB.Spinner.add();\n\n            var moderation_content = $('[data-moderation-content]').first();\n            $.post('/moderate/reverse', {\n                moderation_name: $(e.currentTarget).attr('data-moderate-reverse'),\n                moderation_content: moderation_content.attr('data-moderation-content'),\n                moderation_ids: window.MyBB.Moderation.getSelectedIds(),\n                moderation_source_type: moderation_content.attr('data-moderation-source-type'),\n                moderation_source_id: moderation_content.attr('data-moderation-source-id')\n            }, function (response) {\n                document.location.reload();\n            });\n        }, this));\n\n        // moderation bar clear selection handling\n        $('.clear-selection a').click(function (e) {\n            $('[data-moderation-content] input[type=checkbox]:checked').removeAttr('checked');\n            $('[data-moderation-content] .highlight').removeClass('highlight');\n            $('.inline-moderation').removeClass('floating');\n        });\n\n        // post level inline moderation checkbox handling\n        $(\".post :checkbox\").change(function () {\n            $(this).closest(\".post\").toggleClass(\"highlight\", this.checked);\n\n            var checked_boxes = $('.highlight').length;\n\n            if (checked_boxes == 1) {\n                $('.inline-moderation').addClass('floating');\n            }\n\n            if (checked_boxes > 1) {\n                $('li[data-moderation-multi]').show();\n            } else {\n                $('li[data-moderation-multi]').hide();\n            }\n\n            if (checked_boxes == 0) {\n                $('.inline-moderation').removeClass('floating');\n            }\n\n            $('.inline-moderation .selection-count').text(' (' + checked_boxes + ')');\n        });\n\n        // topic level inline moderation checkbox handling\n        $(\".topic-list .topic :checkbox\").change(function () {\n            $(this).closest(\".topic\").toggleClass(\"highlight\", this.checked);\n\n            var checked_boxes = $('.highlight').length;\n\n            if (checked_boxes == 1) {\n                $('.inline-moderation').addClass('floating');\n            }\n\n            if (checked_boxes > 1) {\n                $('li[data-moderation-multi]').show();\n            } else {\n                $('li[data-moderation-multi]').hide();\n            }\n\n            if (checked_boxes == 0) {\n                $('.inline-moderation').removeClass('floating');\n            }\n\n            $('.inline-moderation .selection-count').text(' (' + checked_boxes + ')');\n        });\n\n        $('li[data-moderation-multi]').hide();\n    };\n\n    // get the IDs of elements currently selected\n    window.MyBB.Moderation.getSelectedIds = function getSelectedIds() {\n        return $('input[type=checkbox][data-moderation-id]:checked').map(function () {\n            return $(this).attr('data-moderation-id');\n        }).get();\n    };\n\n    // grab the current selection and inject it into the modal so we can submit through a normal form\n    window.MyBB.Moderation.injectModalParams = function injectFormData(element) {\n        var moderation_content = $('[data-moderation-content]').first();\n        $(element).attr('data-modal-params', JSON.stringify({\n            moderation_content: moderation_content.attr('data-moderation-content'),\n            moderation_ids: window.MyBB.Moderation.getSelectedIds(),\n            moderation_source_type: moderation_content.attr('data-moderation-source-type'),\n            moderation_source_id: moderation_content.attr('data-moderation-source-id')\n        }));\n    };\n\n    var moderation = new window.MyBB.Moderation();\n})(jQuery, window);\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\n$('html').addClass('js');\n\n$(function () {\n\n\t$('.nojs').hide();\n\n\tif (Modernizr.touch) {\n\t\t$('.radio-buttons .radio-button, .checkbox-buttons .checkbox-button').click(function () {});\n\t} else {\n\t\t$('span.icons i, a, .caption, time').powerTip({ placement: 's', smartPlacement: true });\n\t}\n\n\t$('.user-navigation__links, #main-menu').dropit({ submenuEl: 'div.dropdown' });\n\t$('.dropdown-menu').dropit({ submenuEl: 'ul.dropdown', triggerEl: 'span.dropdown-button' });\n\t$(\"input[type=number]\").stepper();\n\t$(\".password-toggle\").hideShowPassword(false, true);\n\n\t$(\"#search .search-button\").click(function (event) {\n\t\tevent.preventDefault();\n\t\t$(\"#search .search-container\").slideDown();\n\t});\n\n\tautosize($('.post textarea'));\n\n\t$('a.show-menu__link').click(function (e) {\n\t\tif (menu == 0) {\n\t\t\tmenu = 1;\n\t\t\topenMenu(e);\n\t\t} else {\n\t\t\tmenu = 0;\n\t\t\tcloseMenu(e);\n\t\t}\n\t});\n\n\t/*\t$('.post.reply textarea.editor, .form textarea.editor').sceditor({\n \t\tplugins: 'bbcode',\n \t\tstyle: 'js/vendor/sceditor/jquery.sceditor.default.min.css',\n \t\temoticonsRoot: 'assets/images/',\n \t\ttoolbar: 'bold,italic,underline|font,size,color,removeformat|left,center,right|image,link,unlink|emoticon,youtube|bulletlist,orderedlist|quote,code|source',\n \t\tresizeWidth: false,\n \t\tautofocus: false,\n \t\tautofocusEnd: false\n \t});*/\n});\n\n// Overwrite the powertip helper function - it's nearly the same\nfunction getTooltipContent(element) {\n\tvar tipText = element.data(DATA_POWERTIP),\n\t    tipObject = element.data(DATA_POWERTIPJQ),\n\t    tipTarget = element.data(DATA_POWERTIPTARGET),\n\t    targetElement,\n\t    content;\n\n\tif (tipText) {\n\t\tif ($.isFunction(tipText)) {\n\t\t\ttipText = tipText.call(element[0]);\n\t\t}\n\t\tcontent = tipText;\n\t} else if (tipObject) {\n\t\tif ($.isFunction(tipObject)) {\n\t\t\ttipObject = tipObject.call(element[0]);\n\t\t}\n\t\tif (tipObject.length > 0) {\n\t\t\tcontent = tipObject.clone(true, true);\n\t\t}\n\t} else if (tipTarget) {\n\t\ttargetElement = $('#' + tipTarget);\n\t\tif (targetElement.length > 0) {\n\t\t\tcontent = targetElement.html();\n\t\t}\n\t}\n\n\t// Except we're escaping html\n\treturn escapeHTML(content);\n}\n\n// Source: http://stackoverflow.com/questions/24816/escaping-html-strings-with-jquery\n\nvar entityMap = {\n\t\"&\": \"&amp;\",\n\t\"<\": \"&lt;\",\n\t\">\": \"&gt;\",\n\t'\"': '&quot;',\n\t\"'\": '&#39;',\n\t\"/\": '&#x2F;'\n};\n\nfunction escapeHTML(string) {\n\tif (typeof string == 'string') {\n\t\treturn String(string).replace(/[&<>\"'\\/]/g, function (s) {\n\t\t\treturn entityMap[s];\n\t\t});\n\t}\n\n\treturn string;\n}\n\nfunction submitFormAsGet(id, newRoute) {\n\tvar form = $('#' + id);\n\tform.find(\"input[name=_token]\").val('');\n\n\tif (newRoute != null) {\n\t\tform.attr('action', newRoute);\n\t}\n\n\tform.attr('method', 'get').submit();\n\treturn false;\n}\n\nfunction openMenu(e) {\n\te.preventDefault();\n\t$(\"body\").animate({ 'background-position-x': '0px' }, 200, function () {});\n\t$(\".sidebar-menu\").animate({ marginLeft: \"0px\" }, 200, function () {});\n\t$(\".page-body\").animate({ marginLeft: \"225px\", marginRight: \"-225px\" }, 200, function () {});\n}\n\nfunction closeMenu(e) {\n\te.preventDefault();\n\t$(\"body\").animate({ 'background-position-x': '-225px' }, 200, function () {});\n\t$(\".sidebar-menu\").animate({ marginLeft: \"-225px\" }, 200, function () {});\n\t$(\".page-body\").animate({ marginLeft: \"0\", marginRight: \"0\" }, 200, function () {});\n}\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\n(function ($, window) {\n\twindow.MyBB = window.MyBB || {};\n\n\twindow.MyBB.Polls = function Polls() {\n\t\tthis.optionElement = $('#option-simple').clone().attr('id', '').removeClass('hidden').addClass('poll-option').hide();\n\t\t$('#option-simple').remove();\n\n\t\tthis.removeOption($('#add-poll .poll-option'));\n\n\t\t$('#new-option').click($.proxy(this.addOption, this));\n\n\t\t$('#poll-maximum-options').hide();\n\n\t\t$('#poll-is-multiple').change($.proxy(this.toggleMaxOptionsInput, this)).change();\n\n\t\tvar $addPollButton = $(\"#add-poll-button\");\n\t\t$addPollButton.click($.proxy(this.toggleAddPoll, this));\n\t\tif ($addPollButton.length) {\n\t\t\tif ($('#add-poll-input').val() === '1') {\n\t\t\t\t$('#add-poll').slideDown();\n\t\t\t}\n\t\t}\n\n\t\tthis.timePicker();\n\t};\n\n\twindow.MyBB.Polls.prototype.timePicker = function timePicker() {\n\t\t$('#poll-end-at').datetimepicker({\n\t\t\tformat: 'Y-m-d H:i:s',\n\t\t\tlang: 'mybb',\n\t\t\ti18n: {\n\t\t\t\tmybb: {\n\t\t\t\t\tmonths: [Lang.get('general.months.january'), Lang.get('general.months.february'), Lang.get('general.months.march'), Lang.get('general.months.april'), Lang.get('general.months.may'), Lang.get('general.months.june'), Lang.get('general.months.july'), Lang.get('general.months.august'), Lang.get('general.months.september'), Lang.get('general.months.october'), Lang.get('general.months.november'), Lang.get('general.months.december')],\n\t\t\t\t\tdayOfWeek: [Lang.get('general.dayOfWeek.sun'), Lang.get('general.dayOfWeek.mon'), Lang.get('general.dayOfWeek.tue'), Lang.get('general.dayOfWeek.wed'), Lang.get('general.dayOfWeek.thu'), Lang.get('general.dayOfWeek.fri'), Lang.get('general.dayOfWeek.sat')]\n\t\t\t\t}\n\t\t\t},\n\t\t\tminDate: 0\n\t\t});\n\t};\n\n\twindow.MyBB.Polls.prototype.toggleAddPoll = function toggleAddPoll() {\n\t\tif ($('#add-poll-input').val() === '1') {\n\t\t\t$('#add-poll-input').val(0);\n\t\t\t$('#add-poll').slideUp();\n\t\t} else {\n\t\t\t$('#add-poll-input').val(1);\n\t\t\t$('#add-poll').slideDown();\n\t\t}\n\t\treturn false;\n\t};\n\n\twindow.MyBB.Polls.prototype.addOption = function addOption(event) {\n\t\tvar num_options = $('#add-poll .poll-option').length;\n\t\tif (num_options >= 10) {\n\t\t\t// TODO: settings\n\t\t\talert(Lang.choice('poll.errorManyOptions', 10)); // TODO: JS Error\n\t\t\treturn false;\n\t\t}\n\t\tvar $option = this.optionElement.clone();\n\t\t$option.find('input').attr('name', 'option[' + (num_options + 1) + ']');\n\t\t$('#add-poll .poll-option').last().after($option);\n\t\t$option.slideDown();\n\t\tthis.removeOption($option);\n\t\treturn false;\n\t};\n\n\twindow.MyBB.Polls.prototype.removeOption = function bindRemoveOption($parent) {\n\t\t$parent.find('.remove-option').click($.proxy(function (event) {\n\t\t\tvar $me = $(event.target),\n\t\t\t    $myParent = $me.parents('.poll-option');\n\t\t\tif ($('.poll-option').length <= 2) // TODO: settings\n\t\t\t\t{\n\t\t\t\t\talert(Lang.choice('poll.errorFewOptions', 2)); // TODO: JS Error\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t$myParent.slideUp(500);\n\n\t\t\tsetTimeout($.proxy(function () {\n\t\t\t\t$myParent.remove();\n\t\t\t\tthis.fixOptionsName();\n\t\t\t}, this), 500);\n\t\t}, this));\n\t\tif (!Modernizr.touch) {\n\t\t\t$parent.find('.remove-option').powerTip({ placement: 's', smartPlacement: true });\n\t\t}\n\t};\n\n\twindow.MyBB.Polls.prototype.fixOptionsName = function () {\n\t\tvar i = 0;\n\t\t$('#add-poll .poll-option').each(function () {\n\t\t\ti++;\n\t\t\t$(this).find('input').attr('name', 'option[' + i + ']');\n\t\t});\n\t};\n\n\twindow.MyBB.Polls.prototype.toggleMaxOptionsInput = function toggleMaxOptionsInput(event) {\n\t\tme = event.target;\n\t\tif ($(me).is(':checked')) {\n\t\t\t$('#poll-maximum-options').slideDown();\n\t\t} else {\n\t\t\t$('#poll-maximum-options').slideUp();\n\t\t}\n\t};\n\n\tvar polls = new window.MyBB.Polls();\n})(jQuery, window);\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\n(function ($, window) {\n\twindow.MyBB = window.MyBB || {};\n\n\twindow.MyBB.Posts = function Posts() {\n\t\t// Show and hide posts\n\t\t$(\".postToggle\").on(\"click\", this.togglePost).bind(this);\n\n\t\t// Confirm Delete\n\t\t$(\".delete a\").on(\"click\", $.proxy(this.confirmDelete, this));\n\t};\n\n\t// Show and hide posts\n\twindow.MyBB.Posts.prototype.togglePost = function togglePost(event) {\n\t\tevent.preventDefault();\n\t\t// Are we minimized or not?\n\t\tif ($(event.target).hasClass(\"fa-minus\")) {\n\t\t\t// Perhaps instead of hide, apply a CSS class?\n\t\t\t$(event.target).parent().parent().parent().addClass(\"post--hidden\");\n\t\t\t// Make button a plus sign for expanding\n\t\t\t$(event.target).addClass(\"fa-plus\");\n\t\t\t$(event.target).removeClass(\"fa-minus\");\n\t\t} else {\n\t\t\t// We like this person again\n\t\t\t$(event.target).parent().parent().parent().removeClass(\"post--hidden\");\n\t\t\t// Just in case we change our mind again, show the hide button\n\t\t\t$(event.target).addClass(\"fa-minus\");\n\t\t\t$(event.target).removeClass(\"fa-show\");\n\t\t}\n\t};\n\n\t// Confirm Delete\n\twindow.MyBB.Posts.prototype.confirmDelete = function confirmDelete(event) {\n\t\treturn confirm(Lang.get('topic.confirmDelete'));\n\t};\n\n\tvar posts = new window.MyBB.Posts();\n})(jQuery, window);\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\n(function ($, window) {\n\twindow.MyBB = window.MyBB || {};\n\n\twindow.MyBB.Quotes = function Quotes() {\n\n\t\t// MultiQuote\n\t\t$(\".quote-button\").on(\"click\", this.multiQuoteButton.bind(this));\n\n\t\tthis.showQuoteBar();\n\n\t\t$(\".quote-bar__select\").on(\"click\", $.proxy(this.addQuotes, this));\n\t\t$(\".quote-bar__view\").on(\"click\", $.proxy(this.viewQuotes, this));\n\t\t$(\".quote-bar__deselect\").on(\"click\", $.proxy(this.removeQuotes, this));\n\n\t\t$('.quick-quote .fast').on('click', $.proxy(this.quickQuote, this));\n\t\t$('.quick-quote .add').on('click', $.proxy(this.quickAddQuote, this));\n\n\t\t$('.quote__select').on(\"click\", $.proxy(this.quoteAdd, this));\n\t\t$('.quote__remove').on(\"click\", $.proxy(this.quoteRemove, this));\n\t\t$(\"body\").on(\"mouseup\", $.proxy(this.checkQuickQuote, this));\n\n\t\tthis.quoteButtons();\n\t};\n\n\twindow.MyBB.Quotes.prototype.quickQuote = function quickQuote(event) {\n\t\tvar $me = $(event.target);\n\t\tif (!$me.hasClass('quick-quote')) {\n\t\t\t$me = $me.parents('.quick-quote');\n\t\t}\n\n\t\tvar $post = $me.parents('.post');\n\n\t\tif ($me.data('content')) {\n\t\t\t$content = $('<div/>');\n\t\t\t$content.html($me.data('content'));\n\t\t\tthis.addQuote($post.data('postid'), $post.data('type'), $content.text());\n\t\t}\n\t\tthis.hideQuickQuote();\n\t};\n\n\twindow.MyBB.Quotes.prototype.quickAddQuote = function quickAddQuote(event) {\n\t\tvar $me = $(event.target),\n\t\t    quotes = this.getQuotes();\n\t\tif (!$me.hasClass('quick-quote')) {\n\t\t\t$me = $me.parents('.quick-quote');\n\t\t}\n\n\t\tvar $post = $me.parents('.post');\n\n\t\tif ($me.data('content')) {\n\t\t\t$content = $('<div/>');\n\t\t\t$content.html($me.data('content'));\n\t\t\tquotes.push({\n\t\t\t\t'id': $post.data('type') + '_' + $post.data('postid'),\n\t\t\t\t'data': $content.text()\n\t\t\t});\n\t\t\tMyBB.Cookie.set('quotes', JSON.stringify(quotes));\n\n\t\t\tthis.showQuoteBar();\n\t\t}\n\t\tthis.hideQuickQuote();\n\t};\n\n\twindow.MyBB.Quotes.prototype.checkQuickQuote = function checkQuickQuote(event) {\n\t\tvar $me = $(event.target);\n\t\tif ($me.hasClass('quick-quote') || $me.parents('.quick-quote').length) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!$me.hasClass('post')) {\n\t\t\t$me = $me.parents('.post');\n\t\t}\n\n\t\tif ($me && $me.length) {\n\t\t\tvar pid = $me.data('postid');\n\n\t\t\tif ($.trim(window.getSelection().toString())) {\n\t\t\t\tif (elementContainsSelection($me.find('.post__body')[0])) {\n\t\t\t\t\tthis.showQuickQuote(pid);\n\t\t\t\t} else {\n\t\t\t\t\tthis.hideQuickQuote();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.hideQuickQuote();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.hideQuickQuote();\n\t\t}\n\t};\n\n\twindow.MyBB.Quotes.prototype.showQuickQuote = function showQuckQuote(pid) {\n\t\tvar selection = window.getSelection(),\n\t\t    range = selection.getRangeAt(0),\n\t\t    rect = range.getBoundingClientRect();\n\t\t$elm = $(\"#post-\" + pid).find('.quick-quote').show().data('content', $.trim(window.getSelection().toString()));\n\t\t$elm.css({\n\t\t\t'top': window.scrollY + rect.top - $elm.outerHeight() - 4 + 'px',\n\t\t\t'left': window.scrollX + rect.left - ($elm.outerWidth() - rect.width) / 2 + 'px'\n\t\t});\n\t};\n\n\twindow.MyBB.Quotes.prototype.hideQuickQuote = function () {\n\t\t$('.post .quick-quote').hide().data('content', '');\n\t};\n\n\twindow.MyBB.Quotes.prototype.getQuotes = function getQuotes() {\n\t\tvar quotes = MyBB.Cookie.get('quotes'),\n\t\t    myQuotes = [];\n\t\tif (!quotes) {\n\t\t\tquotes = [];\n\t\t} else {\n\t\t\tquotes = JSON.parse(quotes);\n\t\t}\n\t\t$.each(quotes, function (key, quote) {\n\t\t\tif (quote != null) {\n\t\t\t\tmyQuotes.push(quote);\n\t\t\t}\n\t\t});\n\n\t\tMyBB.Cookie.set('quotes', JSON.stringify(myQuotes));\n\t\treturn myQuotes;\n\t};\n\n\t// MultiQuote\n\twindow.MyBB.Quotes.prototype.multiQuoteButton = function multiQuoteButton(event) {\n\t\tevent.preventDefault();\n\t\tvar $me = $(event.target);\n\t\tif (!$me.hasClass('quote-button')) {\n\t\t\t$me = $me.parents('.quote-button');\n\t\t}\n\t\tvar $post = $me.parents('.post');\n\n\t\tvar postId = parseInt($post.data('postid')),\n\t\t    type = $post.data('type'),\n\t\t    quotes = this.getQuotes();\n\n\t\tif (postId) {\n\t\t\tvar removed = false;\n\t\t\t$.each(quotes, function (key, quote) {\n\t\t\t\tif (typeof quote != 'string') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (quote == type + '_' + postId) {\n\t\t\t\t\tdelete quotes[key];\n\t\t\t\t\tremoved = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!removed) {\n\t\t\t\tquotes.push(type + '_' + postId);\n\t\t\t\t$me.find('.quote-button__add').hide();\n\t\t\t\t$me.find('.quote-button__remove').show();\n\t\t\t} else {\n\t\t\t\t$me.find('.quote-button__add').show();\n\t\t\t\t$me.find('.quote-button__remove').hide();\n\t\t\t}\n\n\t\t\tMyBB.Cookie.set('quotes', JSON.stringify(quotes));\n\n\t\t\tthis.showQuoteBar();\n\t\t\treturn false;\n\t\t}\n\t};\n\n\twindow.MyBB.Quotes.prototype.showQuoteBar = function showQuoteBar() {\n\t\tvar quotes = this.getQuotes();\n\n\t\tif (quotes.length) {\n\t\t\t$(\".quote-bar\").show();\n\t\t} else {\n\t\t\t$(\".quote-bar\").hide();\n\t\t}\n\t};\n\n\twindow.MyBB.Quotes.prototype.addQuotes = function addQuotes() {\n\t\tvar quotes = this.getQuotes(),\n\t\t    $quoteBar = $(\".quote-bar\"),\n\t\t    $textarea = $($quoteBar.data('textarea'));\n\n\t\tMyBB.Spinner.add();\n\n\t\t$.ajax({\n\t\t\turl: '/post/quotes',\n\t\t\tdata: {\n\t\t\t\t'posts': quotes,\n\t\t\t\t'_token': $quoteBar.parents('form').find('input[name=_token]').val()\n\t\t\t},\n\t\t\tmethod: 'POST'\n\t\t}).done(function (json) {\n\t\t\tif (json.error) {\n\t\t\t\talert(json.error); // TODO: js error\n\t\t\t} else {\n\t\t\t\t\tvar value = $textarea.val();\n\t\t\t\t\tif (value && value.substr(-2) != \"\\n\\n\") {\n\t\t\t\t\t\tif (value.substr(-1) != \"\\n\") {\n\t\t\t\t\t\t\tvalue += \"\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue += \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\t$textarea.val(value + json.message).focus();\n\t\t\t\t}\n\t\t\t$.modal.close();\n\t\t}).always(function () {\n\t\t\tMyBB.Spinner.remove();\n\t\t});\n\n\t\t$quoteBar.hide();\n\t\tMyBB.Cookie.unset('quotes');\n\t\tthis.quoteButtons();\n\t\treturn false;\n\t};\n\n\twindow.MyBB.Quotes.prototype.addQuote = function addQuote(postid, type, content) {\n\t\tvar $textarea = $(\"#message\");\n\n\t\tMyBB.Spinner.add();\n\n\t\t$.ajax({\n\t\t\turl: '/post/quotes',\n\t\t\tdata: {\n\t\t\t\t'posts': [{\n\t\t\t\t\t'id': type + '_' + postid,\n\t\t\t\t\t'data': content\n\t\t\t\t}],\n\t\t\t\t'_token': $(\".quote-bar\").parents('form').find('input[name=_token]').val()\n\t\t\t},\n\t\t\tmethod: 'POST'\n\t\t}).done(function (json) {\n\t\t\tif (json.error) {\n\t\t\t\talert(json.error); // TODO: js error\n\t\t\t} else {\n\t\t\t\t\tvar value = $textarea.val();\n\t\t\t\t\tif (value && value.substr(-2) != \"\\n\\n\") {\n\t\t\t\t\t\tif (value.substr(-1) != \"\\n\") {\n\t\t\t\t\t\t\tvalue += \"\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue += \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\t$textarea.val(value + json.message).focus();\n\t\t\t\t}\n\t\t}).always(function () {\n\t\t\tMyBB.Spinner.remove();\n\t\t});\n\n\t\tthis.hideQuickQuote();\n\n\t\treturn false;\n\t};\n\n\twindow.MyBB.Quotes.prototype.viewQuotes = function viewQuotes() {\n\t\tMyBB.Spinner.add();\n\n\t\t$.ajax({\n\t\t\turl: '/post/quotes/all',\n\t\t\tdata: {\n\t\t\t\t'posts': this.getQuotes(),\n\t\t\t\t'_token': $(\".quote-bar\").parents('form').find('input[name=_token]').val()\n\t\t\t},\n\t\t\tmethod: 'POST'\n\t\t}).done($.proxy(function (data) {\n\t\t\tvar modalContent = $(\"#content\", $(data)),\n\t\t\t    modal = $('<div/>', {\n\t\t\t\t\"class\": \"modal-dialog view-quotes\",\n\t\t\t\tcloseText: ''\n\t\t\t});\n\t\t\tmodalContent.find('.view-quotes__quotes').css({\n\t\t\t\t'max-height': $(window).height() - 250 + 'px'\n\t\t\t});\n\t\t\tmodal.html(modalContent.html());\n\t\t\tmodal.appendTo(\"body\").modal({\n\t\t\t\tzIndex: 1000,\n\t\t\t\tcloseText: ''\n\t\t\t});\n\n\t\t\tif (Modernizr.touch) {\n\t\t\t\t$('.radio-buttons .radio-button, .checkbox-buttons .checkbox-button').click(function () {});\n\t\t\t} else {\n\t\t\t\t$('span.icons i, a, .caption, time').powerTip({ placement: 's', smartPlacement: true });\n\t\t\t}\n\n\t\t\t$('.quote__select').on(\"click\", $.proxy(this.quoteAdd, this));\n\t\t\t$('.quote__remove').on(\"click\", $.proxy(this.quoteRemove, this));\n\t\t\t$(\".select-all-quotes\").on(\"click\", $.proxy(this.addQuotes, this));\n\t\t\t$('.modal-hide').hide();\n\t\t}, this)).always(function () {\n\t\t\tMyBB.Spinner.remove();\n\t\t});\n\n\t\tthis.hideQuickQuote();\n\n\t\treturn false;\n\t};\n\n\twindow.MyBB.Quotes.prototype.removeQuotes = function removeQuotes() {\n\t\t$quoteBar = $(\".quote-bar\");\n\t\t$quoteBar.hide();\n\t\tMyBB.Cookie.unset('quotes');\n\t\tthis.quoteButtons();\n\t\treturn false;\n\t};\n\n\twindow.MyBB.Quotes.prototype.quoteButtons = function quoteButtons() {\n\t\tvar quotes = this.getQuotes();\n\n\t\t$('.quote-button__add').show();\n\t\t$('.quote-button__remove').hide();\n\n\t\t$.each(quotes, function (key, quote) {\n\t\t\tif (typeof quote != 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tquote = quote.split('_');\n\t\t\ttype = quote[0];\n\t\t\tpostId = parseInt(quote[1]);\n\t\t\tvar $quoteButton = $(\"#post-\" + postId + \"[data-type='\" + type + \"']\").find('.quoteButton');\n\t\t\t$quoteButton.find('.quote-button__add').hide();\n\t\t\t$quoteButton.find('.quote-button__remove').show();\n\t\t});\n\t};\n\n\twindow.MyBB.Quotes.prototype.quoteAdd = function quoteAdd(event) {\n\t\tvar $me = $(event.target),\n\t\t    $post = $me.parents('.content-quote'),\n\t\t    $textarea = $(\"#message\"),\n\t\t    quotes = this.getQuotes();\n\n\t\tvar value = $textarea.val();\n\t\tif (value && value.substr(-2) != \"\\n\\n\") {\n\t\t\tif (value.substr(-1) != \"\\n\") {\n\t\t\t\tvalue += \"\\n\";\n\t\t\t}\n\t\t\tvalue += \"\\n\";\n\t\t}\n\t\t$textarea.val(value + $post.data('quote')).focus();\n\n\t\tdelete quotes[$post.data('id')];\n\t\tMyBB.Cookie.set('quotes', JSON.stringify(quotes));\n\t\t$post.slideUp('fast');\n\n\t\tif (this.getQuotes().length == 0) {\n\t\t\t$.modal.close();\n\t\t}\n\n\t\twhile ($post.next().length) {\n\t\t\t$post = $post.next();\n\t\t\t$post.data('id', $post.data('id') - 1);\n\t\t}\n\n\t\tthis.quoteButtons();\n\t\tthis.showQuoteBar();\n\t};\n\n\twindow.MyBB.Quotes.prototype.quoteRemove = function quoteRemove(event) {\n\t\tvar $me = $(event.target),\n\t\t    $post = $me.parents('.content-quote'),\n\t\t    quotes = this.getQuotes();\n\n\t\tdelete quotes[$post.data('id')];\n\t\tMyBB.Cookie.set('quotes', JSON.stringify(quotes));\n\t\t$post.slideUp('fast');\n\n\t\tif (this.getQuotes().length == 0) {\n\t\t\t$.modal.close();\n\t\t}\n\n\t\twhile ($post.next().length) {\n\t\t\t$post = $post.next();\n\t\t\t$post.data('id', $post.data('id') - 1);\n\t\t}\n\n\t\tthis.quoteButtons();\n\t\tthis.showQuoteBar();\n\t\treturn false;\n\t};\n\n\tvar quotes = new window.MyBB.Quotes();\n\n\t// Helper functions\n\t// http://stackoverflow.com/questions/8339857\n\tfunction isOrContains(node, container) {\n\t\twhile (node) {\n\t\t\tif (node === container) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction elementContainsSelection(el) {\n\t\tvar sel;\n\t\tif (window.getSelection) {\n\t\t\tsel = window.getSelection();\n\t\t\tif (sel.rangeCount > 0) {\n\t\t\t\tfor (var i = 0; i < sel.rangeCount; ++i) {\n\t\t\t\t\tif (!isOrContains(sel.getRangeAt(i).commonAncestorContainer, el)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if ((sel = document.selection) && sel.type != \"Control\") {\n\t\t\treturn isOrContains(sel.createRange().parentElement(), el);\n\t\t}\n\t\treturn false;\n\t}\n})(jQuery, window);\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\n(function ($, window) {\n\twindow.MyBB = window.MyBB || {};\n\n\twindow.MyBB.Spinner = {\n\t\tinProgresses: 0,\n\t\tadd: function add() {\n\t\t\tthis.inProgresses++;\n\t\t\tif (this.inProgresses == 1) {\n\t\t\t\t$(\"#spinner\").show();\n\t\t\t}\n\t\t},\n\t\tremove: function remove() {\n\t\t\tthis.inProgresses--;\n\t\t\tif (this.inProgresses == 0) {\n\t\t\t\t$(\"#spinner\").hide();\n\t\t\t}\n\t\t}\n\t};\n})(jQuery, window);\n\n},{}]},{},[2,9,3,7,6,8,1,5,4]);\n"],"file":"main.js","sourceRoot":"/source/"}